// @generated by protoc-gen-es v1.0.0 with parameter "target=ts"
// @generated from file service.proto (package notifications.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message notifications.v1.DeliveryMechanism
 */
export class DeliveryMechanism extends Message<DeliveryMechanism> {
  /**
   * @generated from oneof notifications.v1.DeliveryMechanism.delivery_mechanism_type
   */
  deliveryMechanismType: {
    /**
     * @generated from field: string apns_device_token = 1;
     */
    value: string;
    case: "apnsDeviceToken";
  } | {
    /**
     * @generated from field: string firebase_device_token = 2;
     */
    value: string;
    case: "firebaseDeviceToken";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DeliveryMechanism>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "notifications.v1.DeliveryMechanism";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "apns_device_token", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "delivery_mechanism_type" },
    { no: 2, name: "firebase_device_token", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "delivery_mechanism_type" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeliveryMechanism {
    return new DeliveryMechanism().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeliveryMechanism {
    return new DeliveryMechanism().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeliveryMechanism {
    return new DeliveryMechanism().fromJsonString(jsonString, options);
  }

  static equals(a: DeliveryMechanism | PlainMessage<DeliveryMechanism> | undefined, b: DeliveryMechanism | PlainMessage<DeliveryMechanism> | undefined): boolean {
    return proto3.util.equals(DeliveryMechanism, a, b);
  }
}

/**
 * @generated from message notifications.v1.RegisterInstallationRequest
 */
export class RegisterInstallationRequest extends Message<RegisterInstallationRequest> {
  /**
   * @generated from field: string installation_id = 1;
   */
  installationId = "";

  /**
   * @generated from field: notifications.v1.DeliveryMechanism delivery_mechanism = 2;
   */
  deliveryMechanism?: DeliveryMechanism;

  constructor(data?: PartialMessage<RegisterInstallationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "notifications.v1.RegisterInstallationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "installation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "delivery_mechanism", kind: "message", T: DeliveryMechanism },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterInstallationRequest {
    return new RegisterInstallationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterInstallationRequest {
    return new RegisterInstallationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterInstallationRequest {
    return new RegisterInstallationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RegisterInstallationRequest | PlainMessage<RegisterInstallationRequest> | undefined, b: RegisterInstallationRequest | PlainMessage<RegisterInstallationRequest> | undefined): boolean {
    return proto3.util.equals(RegisterInstallationRequest, a, b);
  }
}

/**
 * @generated from message notifications.v1.RegisterInstallationResponse
 */
export class RegisterInstallationResponse extends Message<RegisterInstallationResponse> {
  /**
   * @generated from field: string installation_id = 1;
   */
  installationId = "";

  /**
   * @generated from field: uint64 valid_until = 2;
   */
  validUntil = protoInt64.zero;

  constructor(data?: PartialMessage<RegisterInstallationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "notifications.v1.RegisterInstallationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "installation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "valid_until", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterInstallationResponse {
    return new RegisterInstallationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterInstallationResponse {
    return new RegisterInstallationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterInstallationResponse {
    return new RegisterInstallationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RegisterInstallationResponse | PlainMessage<RegisterInstallationResponse> | undefined, b: RegisterInstallationResponse | PlainMessage<RegisterInstallationResponse> | undefined): boolean {
    return proto3.util.equals(RegisterInstallationResponse, a, b);
  }
}

/**
 * @generated from message notifications.v1.DeleteInstallationRequest
 */
export class DeleteInstallationRequest extends Message<DeleteInstallationRequest> {
  /**
   * @generated from field: string installation_id = 1;
   */
  installationId = "";

  constructor(data?: PartialMessage<DeleteInstallationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "notifications.v1.DeleteInstallationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "installation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteInstallationRequest {
    return new DeleteInstallationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteInstallationRequest {
    return new DeleteInstallationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteInstallationRequest {
    return new DeleteInstallationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteInstallationRequest | PlainMessage<DeleteInstallationRequest> | undefined, b: DeleteInstallationRequest | PlainMessage<DeleteInstallationRequest> | undefined): boolean {
    return proto3.util.equals(DeleteInstallationRequest, a, b);
  }
}

/**
 * @generated from message notifications.v1.SubscribeRequest
 */
export class SubscribeRequest extends Message<SubscribeRequest> {
  /**
   * @generated from field: string installation_id = 1;
   */
  installationId = "";

  /**
   * @generated from field: repeated string topics = 2;
   */
  topics: string[] = [];

  constructor(data?: PartialMessage<SubscribeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "notifications.v1.SubscribeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "installation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "topics", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscribeRequest {
    return new SubscribeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscribeRequest {
    return new SubscribeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscribeRequest {
    return new SubscribeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SubscribeRequest | PlainMessage<SubscribeRequest> | undefined, b: SubscribeRequest | PlainMessage<SubscribeRequest> | undefined): boolean {
    return proto3.util.equals(SubscribeRequest, a, b);
  }
}

/**
 * @generated from message notifications.v1.UnsubscribeRequest
 */
export class UnsubscribeRequest extends Message<UnsubscribeRequest> {
  /**
   * @generated from field: string installation_id = 1;
   */
  installationId = "";

  /**
   * @generated from field: repeated string topics = 2;
   */
  topics: string[] = [];

  constructor(data?: PartialMessage<UnsubscribeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "notifications.v1.UnsubscribeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "installation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "topics", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnsubscribeRequest {
    return new UnsubscribeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnsubscribeRequest {
    return new UnsubscribeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnsubscribeRequest {
    return new UnsubscribeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UnsubscribeRequest | PlainMessage<UnsubscribeRequest> | undefined, b: UnsubscribeRequest | PlainMessage<UnsubscribeRequest> | undefined): boolean {
    return proto3.util.equals(UnsubscribeRequest, a, b);
  }
}

